<% layout( '../admin-layout' ) -%>

<% if ( items ) {  %>
<h2>Instance: <span id="instanceTitle" class="str xeditable"><%= items.title %></span></h2>
<% } %>
<!-- Phases -->
<form id="instance-form">
<div class="phases">
<% if ( items.phases) { 
	phase_i = -1
%>
	<% items.phases.forEach(function( phase ){ 
		phase_i++
	%>
		<div class="phase" id="phase_<%= phase_i %>">
			<h3 class="xeditable phase-title str" id="phase-title_<%= phase_i %>" data-type="text" data-pk="1" data-url="" data-title="Phase Title">
				<%= phase.title %>
			</h3>
			<div class="row">
				<!-- Define time range -->
				<div class="col-md-6 admin-panel">
					<div class="row">
						<div class='col-sm-5'>
							<div class="input-group input-group-xs">
								<span class="input-group-addon" id="start_<%= phase_i %>">Start</span>
								<input type="text" class="datetimepicker form-control start" id="datetimepicker_start_<%= phase_i %>" aria-describedby="Select date and time when Phase should start"  value="<%- phase.start %>">
							</div>
						</div>
						<div class='col-sm-5'>
							<div class="input-group input-group-xs">
								<span class="input-group-addon" id="start_<%= phase_i %>">End</span>
								<input type="text" class="datetimepicker form-control end" id="datetimepicker_end_<%= phase_i %>" aria-describedby="Select date and time when Phase should start"  value="<%= phase.end %>">
							</div>
						</div>
					</div>
					<br/>
					<ul class="nav nav-tabs nav-tabs" role="tablist">
						<li role="presentation" class="active"><a href="#task_<%= phase_i %>" aria-controls="task" role="tab" data-toggle="tab">Task</a></li>
						<li role="presentation" ><a href="#supplements_<%= phase_i %>" aria-controls="supplements" role="tab" data-toggle="tab">Supplements</a></li>
					</ul>	  
					<div class="tab-content">
						<div class="sec tab-pane active" id="task_<%= phase_i %>">
							<textarea class="script-form task" id="phase-task_<%= phase_i %>"><%= phase.instruction %></textarea>
						</div>
						<div class="sec tab-pane" id="supplements_<%= phase_i %>">
							<textarea class="script-form supplements" id="phase-supplements_<%= phase_i %>"><%= phase.supplements %></textarea>
						</div>
					</div>
				</div>
				<!-- Select Groups -->
				<div class="col-md-2 admin-panel">
					<h4>Group Formations</h4>
					<div id="group_<%= phase_i %>" class="phase-group-list"></div>
				</div>
				<!-- Select Videos -->
				<div class="col-md-4 admin-panel">
					<h4>Video Files</h4>
					<div id="videos_<%= phase_i %>" class="phase-video-list"></div>
				</div>
			</div>
			<!-- Customize group / video instance permissions -->
			<div class="col-md-12">
				<a class="btn right" id="btn-show-permission-<%= phase_i %>" role="button" data-toggle="collapse" data-nada="permissionTable('<%= phase_i %>')" href="#collapseAccess_<%= phase_i %>" aria-expanded="false" aria-controls="collapseAccess_<%= phase_i %>">customize group permissions</a>
				<div class="collapse" id="collapseAccess_<%= phase_i %>">
					<table class="script-table" id="table1"></table>
				</div>
			</div>	
		</div>	
	<% }) %>
<% } %>
</div>

<br><br><br>
<div class="buttons">
	<label class="alert-btn"><input type="checkbox" id="overwrite" /> Overwrite all video instances and groups?</label>
	<br/>
	<button type="submit" class="btn-default btn">save instance</button>  
	<a href="/admin/scripts/instances">cancel</a> 
	<a class="alert-btn right" href="/admin/scripts/instances/destroy/<%= items._id %>" title="Delete this instance">delete</a>
</div>
</form>

<script>

/*
todo
- preview group formations
- validation / optional values
*/


/*
require.config({
  paths: {
    // set the moment.js path
    jquery: 'jquery-1.9.1.min',
    moment: 'moment.min',
    datetime: 'bootstrap-datetimepicker.min'
  }
});

	require(['moment', 'jquery', 'datetime'], function(moment, jquery, datetimepicker) {
  // test if moment is loaded
  alert(moment().format('dddd, MMMM Do YYYY, h:mm:ss a'));
});
*/

// make it editable
$.fn.editable.defaults.mode = 'inline'; // popup



function escapeSpecialChars(s) { 
    return encodeURIComponent(s);
    return s.replace(/\n/g, "\\n")
               .replace(/\'/g, "\\'")
               .replace(/\"/g, '\\"')
               .replace(/\&/g, "\\&")
               .replace(/\r/g, "\\r")
               .replace(/\t/g, "\\t")
               .replace(/\b/g, "")
               .replace(/\f/g, "\\f");
};

$('textarea').each(function(i, val){
	$(this).val( decodeURIComponent($(this).val()) );
})
$('.str').each(function(i, val){
	$(this).text( decodeURIComponent($(this).text()) );
})
var data = JSON.parse('<%-JSON.stringify( items.phases )%>');

$(document).ready(function() {

	var 
		the_formations = [],
		the_files = []
		;
		
	// make text editable inline
	$('.xeditable').editable({
		success: function(response, value) {
       //alert($(this).attr('id') +'__'+value)   
   	}
	});

	// load group formations
	$.each( data, function(i, phase){
		// list available group formations
		$.get('/json/admin/groups/formations', function(formations){ 
			the_formations = formations;
			$.each(formations, function(j, val){
				var check = phase.groupformation === formations[j]._id ? 'checked' : '';
				$('#group_'+i).append( $('<label><input '+ check +' value="'+val._id+'" type="radio" name="grform_'+i+'" aria-label="'+val.title+'"> '+val.title+'</label><br>' ) );
			});
		});
		// list available video files
		$.get('/json/admin/video-files', function(files){
			the_files = files; 
			$.each(files, function(j, val){
				var checked = phase.video_files.indexOf( val._id ) === -1 ?  '' : 'checked'; 
				$('#videos_'+i).append( $('<label><input type="checkbox"  '+ checked +' value="'+val._id+'" name="video-files-'+j+'" aria-label="'+val.title+'"> '+val.title+' ('+val.creator+')</label><br>' ) );
			});
		});
		// list dates
		$('#datetimepicker_start_'+i ).datetimepicker({ sideBySide: true }).data("DateTimePicker").date(moment(phase.start));
		$('#datetimepicker_end_'+i).datetimepicker({ sideBySide: true }).data("DateTimePicker").date(moment(phase.end));
	});
	
	
	
	
	
	
	
	// handle submit
	$('#instance-form').submit(function( event ) { 
		event.preventDefault();	
		// collect data from form
		var 
			res = JSON.parse('<%-JSON.stringify( items )%>'),
			overwrite = $('#overwrite').prop( "checked" )
			;
			
//		alert(JSON.stringify(res.phases[0].widgets[0].widget_options))
//		return;	
		res.title = $('#instanceTitle').text();
		res.status = res.status === 'running' ? 'running' : 'ready';

		// collect phases
		$.each( res.phases, function(i, phase){ 
			// collect date
			var
				start = new Date( $('#datetimepicker_start_'+i).val() ),
				end = new Date( $('#datetimepicker_end_'+i).val() )
				; 
			//if(moment(end).subtract(moment(start)).hours() > 0){
			phase.start = start;
			phase.end = end; 
			phase.title = escapeSpecialChars($('#phase_'+i).find('.phase-title').text()),
    	phase.instruction = escapeSpecialChars( $('#phase-task_'+i).val() ),
    	phase.supplements = escapeSpecialChars( $('#phase-supplements_'+i).val()),//'#phase-supplements_'+i, //  
    	// collect group formations
			phase.seq = i;
			phase.groupindex = i;
			phase.groupformation = $('#group_'+i+' :checked').val();
			//phase.widgtes = phase.widgets;
			
			// collect videos per phase
  		var videos = $('#phase_'+i).find('.phase-video-list input:checked').map(function() {
  			return this.value;
			}).get(); 
			phase.video_files = videos;
			//alert(JSON.stringify(phase))
			// store it
			$.extend(res.phases[i], phase) 
		});

		//alert(JSON.stringify(res.phases[1].widgets[0].widget_options))
			//return;
		// send it
		$.ajax({
			type: "POST",
			url: '/admin/scripts/instances/update/'+res._id,
			contentType: "application/json",
			data: JSON.stringify( { overwrite: overwrite, instance: res} ),
			success: function(res){
				window.location.href = '/admin/scripts/instances';
			},
			error : function(e){
				console.log(JSON.stringify(e));
			}	
		});
	});
	
	
	$('#btn-show-permission-0').click(function(){
		permissionTable(0);
	})

	/*********************/
	/* permission table */
	function permissionTable(instance){
		var getOf = function(ids,obj){
				var arr = [];
				for (var i = 0; i < obj.length; i++){ 
					if( ids.indexOf( String( obj[i]._id ) ) > -1){
						arr.push( obj[i] );
					}
				}
				return arr;
			} 
		var 
			phase = 1, 
			val = {}, 
			tab = '#table1', 
			tab_cell, 
			tab_row, 
			tab_head,
			sel_formation = $('#group_'+instance+' :checked').val(),
			sel_files = $('#phase_'+instance).find('.phase-video-list input:checked').map(function() {
  			return this.value;
			}).get(), 
			data = {
				groups: getOf([ String( sel_formation ) ], the_formations), 
				videos: getOf(sel_files, the_files)  
			}
			;
			
			
			//alert(JSON.stringify(the_files))
			//alert(JSON.stringify(data.videos))
			
  	// column header
		tab_head = $('<thead></thead>')
			.append( $('<td></td>').text( 'Video Instances') )
			.appendTo( tab )
			; 
		for(var j = 0; j < data.videos.length; j++){	
			tab_cell = $('<td></td>')
				.text( data.videos[j]._id )
				.addClass('xeditable')
  			.data('type', 'text')
  			.data('id', data.videos[j].id)
  			.data('pk', data.videos[j].id)
				.appendTo( tab_head );
		}
		// rows
  	for(var i = 0; i < data.groups.length; i++){
  		// first column
  		var row_label = $('<td></td>')
  			.text( 'Group '+data.groups[i].id )
  			.addClass('xeditable')
  			.data('type', 'text')
  			.data('id', data.groups[i].id)
  			.data('pk', 1)
  			;	
  		tab_row = $('<tr></tr>')
  			.append( row_label );
  		// cells
  		for(var j = 0; j < data.videos.length; j++){
  			var tab_cell = getEmptyCell();
				tab_cell.appendTo( tab_row );
					
  			/*if( data.groups[i].videos.indexOf( data.videos[j].id ) >= 0 ){
  				tab_cell
  					.html( buildCell( tab_cell, data.videos[j] ) )
  					.addClass('visible-cell')
  					;
  			}*/
  		}
  		$(tab).append( tab_row );
  		
  	}

	}// end permission table
	
	
	/*
	**/
	function getEmptyCell(){
		var ch = $('<input type="checkbox" value="1" />')
		return $("<td></td>").append( ch );
	}
	
	/*
	 **/
	function buildCell( cell, video ){
		$(cell).click(function(){
			alert(2)
		});
		return video.id;	
	}
	
	alert(3)
	permissionTable(1)
});


</script>

